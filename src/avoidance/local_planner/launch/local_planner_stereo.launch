<launch>

  <arg name="world_file_name"    default="simple_obstacle" />
  <arg name="world_path" default="/home/prasun/Aerialist/aerialist/resources/simulation/worlds/$(arg world_file_name).world" />
  <!-- <arg name="world_path" default="/src/aerialist/aerialist/resources/simulation/worlds/$(arg world_file_name).world" /> -->
  <arg name="pointcloud_topics" default="[/stereo/points2]"/>

  <arg name="gui" default="true"/>
  <arg name="rviz" default="true"/>

    <arg name="obst" default = "false"/>-
    <arg name="obst_x" default = "0"/>
    <arg name="obst_y" default = "0"/>
    <arg name="obst_z" default = "0"/>
    <arg name="obst_yaw" default = "0"/>
    <arg name="obst_l" default = "1"/>
    <arg name="obst_w" default = "1"/>
    <arg name="obst_h" default = "1"/>


    <arg name="obst2" default = "false"/>
    <arg name="obst2_x" default = "0"/>
    <arg name="obst2_y" default = "0"/>
    <arg name="obst2_z" default = "0"/>
    <arg name="obst2_yaw" default = "0"/>
    <arg name="obst2_l" default = "1"/>
    <arg name="obst2_w" default = "1"/>
    <arg name="obst2_h" default = "1"/>

    <arg name="obst3" default = "false"/>
    <arg name="obst3_x" default = "1"/>
    <arg name="obst3_y" default = "1"/>
    <arg name="obst3_z" default = "1"/>
    <arg name="obst3_yaw" default = "0"/>


  <arg name="pattern" default="false"/>
  <arg name="pattern_design" default=""/>

  <arg name="pattern2" default="false"/>
  <arg name="pattern_design2" default=""/>

  <!-- Launch PX4 and mavros -->
  <include file="$(find avoidance)/launch/avoidance_sitl_stereo.launch" >
    <arg name="model" value="iris_stereo_camera" />
    <arg name="world_path" value="$(arg world_path)" />
    <arg name="pointcloud_topics" value="$(arg pointcloud_topics)"/>
  </include>

  <include file="$(find inter_images)/launch/test.launch"/>

  <!-- Load custom console configuration -->
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find local_planner)/resource/custom_rosconsole.conf"/>

  <!-- Launch local planner -->
  <node name="local_planner_node" pkg="local_planner" type="local_planner_node" output="screen" >
    <param name="goal_x_param" value="15" />
    <param name="goal_y_param" value="15"/>
    <param name="goal_z_param" value="4" />
    <param name="world_name" value="$(find avoidance)/sim/worlds/$(arg world_file_name).yaml" />
    <rosparam param="pointcloud_topics" subst_value="True">$(arg pointcloud_topics)</rosparam>
  </node>



  <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find local_planner)/resource/local_planner.rviz" />


  <!-- add obstacles -->
    <group if="$(arg obst)">
        <!-- Convert xacro and put on parameter server -->
        <!-- <param name="box_description" command="$(find xacro)/xacro.py aerialist/resources/simulation/box.xacro name:=box l:=$(arg obst_l) w:=$(arg obst_w) h:=$(arg obst_h)" /> -->
        <param name="box_description" command="$(find xacro)/xacro.py aerialist/resources/simulation/box.xacro name:=box l:=$(arg obst_l) w:=$(arg obst_w) h:=$(arg obst_h) pattern:=$(arg pattern_design)" />

        <node name="spawn_obstacle" pkg="gazebo_ros" type="spawn_model" output="screen"
            args="-param box_description -urdf -x $(arg obst_x) -y $(arg obst_y) -z $(arg obst_z) -Y $(arg obst_yaw) -model box/">
        </node>
    </group>
    <group if="$(arg obst2)">
        <param name="box_description2" command="$(find xacro)/xacro.py aerialist/resources/simulation/box.xacro name:=box2 l:=$(arg obst2_l) w:=$(arg obst2_w) h:=$(arg obst2_h) pattern:=$(arg pattern_design2)" />
        <node name="spawn_obstacle2" pkg="gazebo_ros" type="spawn_model" output="screen"
            args="-param box_description2 -urdf -x $(arg obst2_x) -y $(arg obst2_y) -z $(arg obst2_z) -Y $(arg obst2_yaw) -model box2/">
        </node>
    </group>
<!--     <group if="$(arg obst2)"> -->
<!--         <param name="oak_tree_description" command="xacro /home/prasun/Aerialist/aerialist/resources/simulation/oak_tree.xacro" /> -->
<!--         <node name="spawn_obstacle2" pkg="gazebo_ros" type="spawn_model" output="screen" -->
<!--             args="-param oak_tree_description -urdf -x $(arg obst2_x) -y $(arg obst2_y) -z $(arg obst2_z) -Y $(arg obst2_yaw) -model oak_tree/"> -->
<!--         </node> -->
<!--     </group> -->
  <!-- rosrun topic_tools transform /stereo/disparity /stereo/disparity_image sensor_msgs/Image 'm.image' -->

  <!-- rosrun topic_tools transform /stereoV/disparity /stereoV/disparity_image sensor_msgs/Image 'm.image' -->

  <!--  <node name="transform" pkg="topic_tools" type="transform"
      args="/stereo/disparity /stereo/disparity_image sensor_msgs/Image 'm.image'" />

       <node name="transformV" pkg="topic_tools" type="transform"
      args="/stereoV/disparity /stereoV/disparity_image sensor_msgs/Image 'm.image'" /> -->

</launch>
